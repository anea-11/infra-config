---
- name: Initial Encoding server configuration
  hosts: encoding_servers
  become: yes

  tasks:
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Update all packages to their latest version
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Reboot the system
      ansible.builtin.reboot:

    - name: Install ca-certificates, curl, gnupg
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Create Docker keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key and save it
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker.gpg
      register: download_result

    - name: Add Docker GPG key to keyring
      ansible.builtin.command: gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg /usr/share/keyrings/docker.gpg
      when: download_result.changed

    - name: Set permissions for Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'
      when: download_result.changed

    - name: Retrieve Architecture Name
      ansible.builtin.shell: dpkg --print-architecture
      register: target_architecture

    - name: Add Docker repository to sources.list.d
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        line: >
          deb [arch={{target_architecture.stdout.strip()}} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        create: yes
      when: download_result.changed

    - name: Update package cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io 
          - docker-buildx-plugin 
          - docker-compose-plugin
          - docker-compose
        state: present

    - name: Create Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add ubuntu user to Docker group
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Copy Docker image archives to target
      ansible.builtin.copy:
        dest: /docker_image_archives/arm
        src: /docker_image_archives/arm/

    - name: Copy sample videos to target
      ansible.builtin.copy:
        dest: /videos
        src: /videos/
    
    - name: Copy docker-compose to target
      ansible.builtin.copy:
        dest: /docker_compose/encoding-app
        src: /docker_compose/encoding-app/

    - name: Load encoding service image
      community.docker.docker_image_load:
        path: /docker_image_archives/arm/encoder-x265-img.tar

    - name: Load frontend service image
      community.docker.docker_image_load:
        path: /docker_image_archives/arm/frontend-encoding-img.tar

    - name: Delete docker image archives
      ansible.builtin.file:
        path: /docker_image_archives/
        state: absent

    - name: Set hostname env var for frontend service
      replace:
        path: /docker_compose/encoding-app/docker-compose.yaml
        regexp: 'localhost'
        replace: "{{ansible_host}}"

    - name: Start encoding app containers
      community.docker.docker_compose:
        project_src: /docker_compose/encoding-app
        state: present
